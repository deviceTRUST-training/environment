# Global deployments settings for deployment logic
terraform_settings = ({
  # Deploy NetScaler to vSphere
  deploy_vsphere = true
  # Deploy NetScaler configuration
  deploy_settings = false
  # Deploy Lets Encrypt on NetScaler
  deploy_letsencrypt = false
})

# Login Information for the NetScaler to authenticate API calls
logon_information = ({
  host     = "https://192.168.176.106"
  username = "nsroot"
  password = "nsroot1"
})

##################################################### Vsphere deployment only###############################################
# Variables for the NetScaler VM deployment in vSphere
vsphere = ({
  server       = "10.10.1.4"
  user         = "administrator@vsphere.local"
  password     = "deviceTRUST!2022"
  datacenter   = "democloud"
  host         = "10.10.1.3"
  datastore    = "VM"
  network      = "vSwitch_Internal_INT"
  timezone     = 020
  resourcepool = "Democloud-tf"
})


# NetScaler VM Details
vm = ({
  ovf     = "/home/localadmin/GIT/deviceTRUST-democloud/environment/terraform/citrix-adc/sources/Image/NSVPX-ESX-13.0-91.13_nc_64.ovf"
  network = "vSwitch_Internal_INT"
  mac     = "00:00:00:aa:bb:cc"
  ip      = "10.10.1.15"
  gateway = "10.10.1.1"
  netmask = "255.255.255.0"
  name    = "inf-adc-01"
})


##################################################### NetScaler configuration only###############################################

# Base uncategorized configuration variables
base_configuration = ({
  # NetScaler hostname
  hostname = "GOEUC-ADC-01"
  # Timezone to be set in the NetScaler
  timezone = "GMT+02:00-CEST-Europe/Berlin"
  # Prefix/Suffix for profile names in the NetScaler
  environment_prefix = "GO-EUC"
  # Deploy advanced features (if licensed with advanced or above only!)
  advanced = true


})

# NetScaler Default Subnet IP data
base_configuration_snip = ({
  ip_address = "192.168.1.249"
  netmask    = "255.255.255.0"
  icmp       = "ENABLED"
})


# all the backend services to be created
servers = {
  srv_storefront01 = {
    hostname   = "srv_storefront01"
    ip_address = "192.168.1.10"
  }

  srv_storefront02 = {
    hostname   = "srv_storefront02"
    ip_address = "192.168.1.11"
  }

  srv_dc01 = {
    hostname   = "srv_dc01"
    ip_address = "192.168.1.12"
  }

  srv_dc02 = {
    hostname   = "srv_dc02"
    ip_address = "192.168.1.13"
  }
}

# all the service groups to be created 
service_groups = {
  svcg_storefront = {
    name = "svcg_storefront"
    type = "HTTP"
    port = "80"
    # Define backend servers: Name + port + weight
    servers_to_bind = ["srv_storefront01:80:1", "srv_storefront02:80:2"]
    # Define the virtual servers to bind this service group to:
    virtual_server_bindings = ["lb_storefront"]
  }

  svcg_dc = {
    name = "svcg_ldaps"
    type = "SSL_TCP"
    port = "636"
    # Define backend servers to be included in the servicegroup: Name + port + weight
    servers_to_bind = ["srv_dc01:636:1", "srv_dc02:636:1"]
    # Define the virtual servers to bind this service group to:
    virtual_server_bindings = ["lb_ldaps"]
  }
}


# All the virtual servers to be created based 
virtual_servers = {
  #Example server, would still require a certificate / backend
  lb_ldaps = {
    name            = "lb_ldaps"
    servicetype     = "SSL_TCP"
    ipv46           = "192.168.176.142"
    port            = "636"
    lbmethod        = "ROUNDROBIN"
    persistencetype = "SOURCEIP"
    timeout         = "180"
    sslprofile      = "ssl_prof_GO-EUC_fe_TLS1213"
    tcpprofilename  = "tcp_prof_GO-EUC"
  }

  lb_storefront = {
    name            = "lb_storefront"
    servicetype     = "HTTP"
    ipv46           = "192.168.176.143"
    port            = "80"
    lbmethod        = "ROUNDROBIN"
    persistencetype = "SOURCEIP"
    timeout         = "180"
    sslprofile      = "ssl_prof_GO-EUC_fe_TLS1213"
    httpprofilename = "http_prof_GO-EUC"
    tcpprofilename  = "tcp_prof_GO-EUC"
  }
}

# The settings for an LDAPS policy/action with global binding
auth_ldaps = {
  action_name        = "act_ldaps"
  policy_name        = "pol_auth_ldaps"
  policy_expression  = "True"
  serverip           = "192.168.176.142"
  serverport         = "636"
  sectype            = "SSL"
  authtimeout        = "1"
  ldaploginname      = "username"
  ldapbase           = "dc=go-euc,dc=local"
  ldapbinddn         = "CN=Administrator,CN=Users,DC=go-euc,DC=local"
  ldapbinddnpassword = "Password1!"

}

gateway = {
  name          = "gw_go-euc"
  servicetype   = "SSL"
  ipv46         = "192.168.176.199"
  port          = "443"
  dtls          = "OFF"
  sta           = "192.168.150.2"
  storefronturl = "https://storefront.go-euc.local/Citrix/StoreWeb"
}

##################################################### Lets Encrypt deployment only ###############################################

